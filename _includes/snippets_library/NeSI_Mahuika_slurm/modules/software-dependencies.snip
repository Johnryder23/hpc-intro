To demonstrate, let's use `module list`. `module list` shows all loaded
software modules.

```
{{ site.remote.prompt }} module list
```
{: .language-bash}

```
Currently Loaded Modules:
  1) XALT/minimal                       18) HDF5/1.10.5-gimpi-2020a
  2) slurm                              19) libjpeg-turbo/2.0.2-GCCcore-9.2.0
  3) NeSI                          (S)  20) ncurses/6.1-GCCcore-9.2.0
  4) GCCcore/9.2.0                      21) libreadline/8.0-GCCcore-9.2.0
  5) zlib/1.2.11-GCCcore-9.2.0          22) libxml2/2.9.10-GCCcore-9.2.0
  6) binutils/2.32-GCCcore-9.2.0        23) libxslt/1.1.34-GCCcore-9.2.0
  7) GCC/9.2.0                          24) cURL/7.64.0-GCCcore-9.2.0
  8) libpmi                             25) PCRE/8.43-GCCcore-9.2.0
  9) impi/2019.6.166-GCC-9.2.0          26) netCDF/4.7.3-gimpi-2020a
 10) gimpi/2020a                        27) SQLite/3.31.1-GCCcore-9.2.0
 11) imkl/2020.0.166-gimpi-2020a        28) METIS/5.1.0-GCCcore-9.2.0
 12) gimkl/2020a                        29) tbb/2019_U9-GCCcore-9.2.0
 13) bzip2/1.0.8-GCCcore-9.2.0          30) SuiteSparse/5.6.0-gimkl-2020a-METIS-5.1.0
 14) XZ/5.2.4-GCCcore-9.2.0             31) Tcl/8.6.10-GCCcore-9.2.0
 15) libpng/1.6.37-GCCcore-9.2.0        32) Tk/8.6.10-GCCcore-9.2.0
 16) freetype/2.10.1-GCCcore-9.2.0      33) Python/3.8.2-gimkl-2020a
```
{: .output}

Notice that our initial list of modules has increased by 30.  When we loaded Python, it also loaded all of it's dependencies along with all the dependencies of those modules.
